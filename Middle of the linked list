# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def middleNode(self, head: Optional[ListNode]) -> Optional[ListNode]:
        temp=head
        count=0
        while temp!=None:
            temp=temp.next
            count+=1
        i=0
        temp=head
        while i<count//2 and temp!=None:
            temp=temp.next
            i=i+1
        return temp
        
---------------------------------------------------------------------------

Another Logic
class solution:
    def middleNode(self,head:Optional[ListNode])->Optional[ListNode]:
        fast=head
        slow=head
        while fast!=None and fast.next!=None:
            fast=fast.next.next
            slow=low.next
        return slow
    
